.applicant-details
  strong.name = position_application.user.full_name.force_encoding('UTF-8')
  p.email = position_application.user.email
  p.phone = position_application.user.phone
- if position_application.call.administrational?
  h4
    = t('mongoid.models.plurals.recommendation')
    | :
  ul
    = position_application.recommendations_for_pair.map { |r| content_tag :li, "#{h(r.user.full_name)} (#{h(r.user.email)})" }.join.html_safe
  h4
    = t 'helsinki.fields_show.degree'
    | :
  p = position_application.custom['degree'] if position_application.custom
- alliance_memberships = position_application.alliance_memberships
-if alliance_memberships.any?
  - confirmed, unconfirmed = alliance_memberships.partition { |membership| membership.confirmed == true }
  - if confirmed.any?
    .item-block
      h4
        = t('mongoid.models.plurals.alliance')
        | :
      ul
        = confirmed.map { |membership| content_tag :li, h(membership.alliance.name) }.join.html_safe
  - if unconfirmed.any?
    .item-block
      h4
        = t 'alliances.unconfirmed'
        | :
      ul
        = unconfirmed.map { |membership| content_tag :li, h(membership.alliance.name) }.join.html_safe
h4
  = t 'position_applications.show.apply_date'
  | :
p = formatted_date position_application.created_at
h4
  = t 'position_applications.show.apply_position'
  | :
p = position_application.call.title + ', ' + t("position_applications.show.#{position_application.position}",
                                                      count: position_application.deputy_of_safe_length,
                                                      name: position_application.deputy_of)
- if custom_template_exists?('fields_show')
  = render(file: '/' + custom_file('_fields_show'),
           formats: [:html],
           handlers: [:slim],
           locals: { position_application: position_application })
- unless @call.administrational?
  h4
    = t 'position_applications.show.personal_statement'
    | :
  p = position_application.personal_statement
br
br
